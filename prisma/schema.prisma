generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

model User {
  id        String        @id @default(cuid())
  name      String
  email     String         @unique
  image     String?
  location  UserLocation?
  spots     Spot[]
  comments  SpotComment[]
  ratings   SpotRating[]
}

model UserLocation {
  id        String   @id @default(uuid())
  userId    String   @unique
  lat       Float
  lng       Float
  message   String?
  updatedAt DateTime @updatedAt
  user      User     @relation(fields: [userId], references: [id])
}

model Spot {
  id          String         @id @default(cuid())
  user        User           @relation(fields: [userId], references: [id])
  userId      String
  title       String
  description String?
  latitude    Float
  longitude   Float
  address     String?
  imageUrls   Json?
  tags        SpotTag[]      @relation("SpotsOnTags")  // ← リレーション名を明示
  comments    SpotComment[]
  ratings     SpotRating[]
  createdAt   DateTime       @default(now())
  updatedAt   DateTime       @updatedAt
}

model SpotTag {
  id      String  @id @default(cuid())
  name    String  @unique
  spots   Spot[]  @relation("SpotsOnTags")             // ← 同じリレーション名を共有
}


model SpotComment {
  id        String   @id @default(cuid())
  spot      Spot     @relation(fields: [spotId], references: [id])
  spotId    String
  user      User     @relation(fields: [userId], references: [id])
  userId    String
  content   String
  createdAt DateTime @default(now())
}

model SpotRating {
  id        String   @id @default(cuid())
  spot      Spot     @relation(fields: [spotId], references: [id])
  spotId    String
  user      User     @relation(fields: [userId], references: [id])
  userId    String
  score     Int
  createdAt DateTime @default(now())
}
